version: '3'

services:
  app:
    build: .
    container_name: traveler-agent
    ports:
      - "8080:8080"
    environment:
      - SERVER_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=traveler
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - traveler-network
    volumes:
      - ./logs:/root/logs

  postgres:
    image: postgres:12-alpine
    container_name: traveler-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=traveler
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - traveler-network
    restart: unless-stopped

  redis:
    image: redis:6-alpine
    container_name: traveler-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - traveler-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: traveler-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - traveler-network
    restart: unless-stopped

networks:
  traveler-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: 